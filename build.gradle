import java.util.regex.Pattern

buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE+'
    }
    repositories {
        maven {
            url 'http://www.venus-pj.org/artifactory/plugins-release'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.13"
    }
}

apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'com.jfrog.artifactory'

repositories {
    mavenCentral()
    jcenter()
}

subprojects {
    group = 'jp.or.venuspj'
    version = '1.0.0'
    apply plugin: 'java'

    ext {
        springBootVersion = '1.5.3.RELEASE+'
        springSecurityOauth2Version = '2.1.0.RELEASE+'
        guavaVersion = '21.0+'
        mybatisTypeHandlerVersion = '1.0.2'
        mybatisBootVersion = '1.2.0'
        assertJVersion = '3.6.2'
        h2dbVersion = '1.4.193+'
        springStateMachineCoreVersion = '1.2.1.RELEASE'
        logbackVersion = '1.1.9'
        slf4jVersion = '1.7.22'
        junitDevVersion = "4.11"
        junitVersion = "4.12"
        thymeleafExtrasVersion = '3.0.2.RELEASE+'
        thymeleafExtrasJava8timeVersion = '3.0.0.RELEASE+'
        springSessionVersion = '1.3.0.RELEASE+'
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        maven {
            url 'http://www.venus-pj.org/artifactory/plugins-release/'
        }
        maven {
            url 'http://repo.opennms.org/maven2/'
        }
        jcenter()
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    dependencies {
        testCompile group: 'org.assertj', name: 'assertj-core', version: "${assertJVersion}"
        testCompile(group: 'junit', name: 'junit', version: "${junitVersion}")
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '3.5'
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

task incrementVersionCode << {
    println(":incrementVersionCode - Incrementing Version Code...")
    def buildGradleFile = file("build.gradle")
    def patternVersionCode = Pattern.compile("versionCode (\\d+)")
    def buildGradleFileText = buildGradleFile.getText()
    def matcherVersionCode = patternVersionCode.matcher(buildGradleFileText)
    matcherVersionCode.find()
    def mVersionCode = Integer.parseInt(matcherVersionCode.group(1))
    def mNextVersionCode = mVersionCode + 1
    def manifestContent = matcherVersionCode.replaceAll("versionCode " + mNextVersionCode)
    println(":incrementVersionCode - current versionCode=" + mVersionCode);
    println(":incrementVersionCode - next versionCode=" + mNextVersionCode);
    buildGradleFile.write(manifestContent)
}

artifactory {
    publish {
        repository {
            repoKey = 'libs-release-local'
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true

        }
    }
}
