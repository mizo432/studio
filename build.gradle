import java.util.regex.Pattern

buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        maven{
            url 'http://www.venus-pj.org/artifactory/plugins-release'
        }
        maven{
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.13"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'studio'
    version = '1.0.0-SNAPSHOT'
    archiveName = 'studio.jar'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile('org.flywaydb:flyway-core')
    testCompile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
    compile project(":web")
    testCompile("org.springframework.boot:spring-boot-starter-test")

}
bootRepackage {
    excludeDevtools = true
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        springBootVersion = '1.5.1.RELEASE+'
        guavaVersion = '21.0'
        mybatisTypeHandlerVersion = '1.0.2'
        mybatisBootVersion = '1.2.0'
        assertJVersion = '3.6.2'
        h2dbVersion = '1.4.193'
        springStateMachineCoreVersion = '1.2.1.RELEASE'
        logbackVersion='1.1.9'
        slf4jVersion='1.7.22'
        junitDevVersion="4.11"
        jnlpVersion="1.5.0"
        jnplServletVaersion='1.0-6.0.02_ea_b02.2'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven {
            url 'http://www.venus-pj.org/artifactory/plugins-release/'
        }
        maven {
            url 'http://repo.opennms.org/maven2/'
        }
        //        mavenCentral()
        jcenter()
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }
}
subprojects {
    group = 'jp.or.venuspj'
    version = '1.0.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

task incrementVersionCode << {
    println(":incrementVersionCode - Incrementing Version Code...")
    def buildGradleFile = file("build.gradle")
    def patternVersionCode = Pattern.compile("versionCode (\\d+)")
    def buildGradleFileText = buildGradleFile.getText()
    def matcherVersionCode = patternVersionCode.matcher(buildGradleFileText)
    matcherVersionCode.find()
    def mVersionCode = Integer.parseInt(matcherVersionCode.group(1))
    def mNextVersionCode = mVersionCode + 1
    def manifestContent = matcherVersionCode.replaceAll("versionCode " + mNextVersionCode)
    println(":incrementVersionCode - current versionCode=" + mVersionCode);
    println(":incrementVersionCode - next versionCode=" + mNextVersionCode);
    buildGradleFile.write(manifestContent)
}

artifactory {
    publish {
        repository {
            repoKey = 'libs-release-local'
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true

        }
    }
}
