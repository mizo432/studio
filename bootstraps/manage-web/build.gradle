apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        maven {
            url 'http://www.venus-pj.org/artifactory/plugins-release'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.1'
    }

}

description = "studio-manage-web"

jar {
    baseName = 'studio-manage'
    version = '1.0.0-SNAPSHOT'
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher'
        attributes "Start-Class": "org.venuspj.studi.StudioManageApplication"
    }
    archiveName = 'studio-manage.jar'
}

bootRun {
    addResources = true
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

bootRepackage {
    executable = true
    excludeDevtools = true
}

dependencies {
    def jdbcDriver = "mysql:mysql-connector-java:${mySqlConnectorVersion}"
    compile group: "org.springframework.boot", name: "spring-boot-starter-mobile", version: "${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile group: "org.thymeleaf.extras", name: "thymeleaf-extras-java8time", version: "${thymeleafExtrasJava8timeVersion}"
    runtime("org.springframework.boot:spring-boot-starter-actuator")
    compile project(":studio-core")
    compile project(":screen-presenters")
    compile project(":print-presenters")
    compile project(":dataSources")
    compile project(":use-cases")

//    compile group: "org.springframework.security.oauth", name: "spring-security-oauth2", version: "${springSecurityOauth2Version}"
    runtime('org.springframework.boot:spring-boot-devtools')

    runtime("org.mybatis.spring.boot:mybatis-spring-boot-starter:${myBatisSpringBootVersion}")
    runtime("org.mybatis:mybatis-typehandlers-jsr310:${mybatisTypehandlersJsr310Version}")
    runtime("${jdbcDriver}")
    runtime group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"

    testCompile("org.springframework.boot:spring-boot-starter-test")

}
